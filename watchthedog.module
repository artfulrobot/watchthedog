<?php

/**
 * Implements hook_menu
 */
function watchthedog_menu() {
  return [
    'admin/reports/wtd' => [
      'title' => 'Watch the dog',
      'page callback' => 'watchthedog__page',
      'access arguments' => ['access site reports'],
    ],
    'admin/reports/wtd/api' => [
      'page callback' => 'watchthedog__page_api',
      'access arguments' => ['access site reports'],
    ],
    'admin/reports/wtd/test' => [
      'title' => 'Create test entries',
      'page callback' => 'watchthedog__page_test',
      'access arguments' => ['access site reports'],
    ],
  ];
}

function watchthedog__page() {
  drupal_add_js('https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.js', ['type' => 'external']);
  drupal_add_js(drupal_get_path('module', 'watchthedog') . '/js/wtd.js');
  drupal_add_css(drupal_get_path('module', 'watchthedog') . '/css/wtd.css');
  $page = ['#markup' => '<div id="wtd">Loading...</div>'];
  return $page;
}
function watchthedog__page_test() {

  foreach([
    ['something', "Some boring message that is very long goes here. But you only see the first line at first, because it makes it easier to scan. But you can click the Full button to see it all", [], WATCHDOG_NOTICE],
    ['access denied', "node/add - don't you hate getting these!", [], WATCHDOG_WARNING],
    ['something', "You can inspect the variables too.", [
      'well' => 'Hello there',
      'how do you like' => [
        'my' => 'structured data?',
      ]
    ], WATCHDOG_INFO],
  ] as $params) {
    watchdog($params[0], $params[1], $params[2], $params[3]);
    sleep(2);
  }
  sleep(5);

  foreach ([
    'WATCHDOG_EMERGENCY',
    'WATCHDOG_ALERT',
    'WATCHDOG_CRITICAL',
    'WATCHDOG_ERROR',
    'WATCHDOG_WARNING',
    'WATCHDOG_NOTICE',
    'WATCHDOG_INFO',
    'WATCHDOG_DEBUG',
  ] as $i => $const) {
    watchdog('watchthedog', 'Test @level @const', ['@level' => $i, '@const' => $const, 'unused_var'=>TRUE], $i);
  }
  $page = ['#markup' => 'Lots of entries created'];
  return $page;
}
/**
 * Outputs watchdog entries as JSON
 */
function watchthedog__page_api() {

  $limit = 20;
  $offset = 0;

  $params = [];
  $wheres = [];
  if (isset($_GET['date_from']) && strtotime($_GET['date_from']) > 0) {
    $wheres[] = 'timestamp > ' . strtotime($_GET['date_from']);
  }
  if (!empty($_GET['search'])) {
    $wheres[] = 'message LIKE :search1 OR variables LIKE :search2';
    $params[':search1'] = $params[':search2'] = '%' . $_GET['search'] . '%';
  }
  if (!empty($_GET['max']) && ((int) $_GET['max'])>0) {
    $wheres[] = "wid > :max";
    $params[':max'] = (int) $_GET['max'];
  }

  if ($wheres) {
    $wheres = 'WHERE (' . implode(') AND (', $wheres) . ')';
  }
  else {
    $wheres = '';
  }

  $sql = "SELECT * FROM watchdog $wheres ORDER BY wid DESC LIMIT $offset, $limit";

  $entries = array_values(db_query($sql, $params)->fetchAllAssoc('wid'));
  foreach ($entries as &$_) {
    $_->timestamp = date('Y-m-d H:i:s', $_->timestamp);
    $_->variables = unserialize($_->variables);
    if (is_array($_->variables)) {

      // Drupal's t() replaces placeholders like @foo.

      /*
      $subs = [];
      foreach ($_->variables as $var => $val) {
        if (strpos($_->message, $var) !== FALSE) {
          if (is_array($val) || is_object($val)) {
            $val = json_encode($val);
          }
          $subs[$var] = $val;
        }
      }
      $_->message = strtr($_->message, $subs);
       */
      $_->message = t($_->message, $_->variables);
    }
    $_->variables = json_encode($_->variables, JSON_PRETTY_PRINT);
    $_->selected = FALSE;
    $_ = (array) $_;
  }
  unset($_);

  $max = db_query('SELECT MAX(wid) `wid` FROM watchdog')->fetchAssoc();
  $entries = ['entries' => $entries, 'max' => (int) $max['wid']];
  $json = json_encode($entries);
  drupal_add_http_header('Content-Length', strlen($json));
  drupal_add_http_header('Content-Type', 'application/json');
  echo $json;
  drupal_exit();
}
